<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.6</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>no.nb.mlt</groupId>
  <artifactId>wls</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Hermes</name>
  <description>Hermes WLS (Warehouse and Logistics Service) functions as a middleware between NLNs (National Library of Norway) catalogues and
    storage systems
  </description>
  <url>https://wls-api.nb.no/</url>

  <licenses>
    <license>
      <name>MIT</name>
      <url>https://opensource.org/license/mit</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>National Library of Norway</name>
    <url>https://nb.no/</url>
  </organization>

  <developers>
    <developer>
      <id>daniels</id>
      <name>Daniel Aaron Salwerowicz</name>
      <email>daniel.salwerowicz@nb.no</email>
      <url>https://www.nb.no/ansatte/daniel-aaron-salwerowicz/</url>
      <organization>National Library of Norway</organization>
      <organizationUrl>https://nb.no/</organizationUrl>
      <roles>
        <role>Application Developer</role>
      </roles>
      <timezone>Europe/Oslo</timezone>
      <properties>
        <picUrl>https://www.nb.no/content/uploads/2023/10/000000_daniel_aaron-salwerowicz_xxx-1-scaled-e1710506056252.jpg</picUrl>
      </properties>
    </developer>
    <developer>
      <id>noaha</id>
      <name>Noah Bjerkli Aanonli</name>
      <email>noah.aanonli@nb.no</email>
      <url>https://www.nb.no/ansatte/noah-bjerkli-aanonli/</url>
      <organization>National Library of Norway</organization>
      <organizationUrl>https://nb.no/</organizationUrl>
      <roles>
        <role>Advisor</role>
      </roles>
      <timezone>Europe/Oslo</timezone>
    </developer>

  </developers>

  <properties>
    <java.version>21</java.version>
    <kotlin.version>2.0.0</kotlin.version>
    <openapi.version>2.6.0</openapi.version>
    <spotless.version>2.43.0</spotless.version>
    <spring.cloud.version>2023.0.1</spring.cloud.version>
    <testcontainers.version>1.19.8</testcontainers.version>
    <mockk.version>3.0.1</mockk.version>

    <kotlin.code.style>official</kotlin.code.style>
    <kotlin.compiler.jvmTarget>21</kotlin.compiler.jvmTarget>
    <kotlin.compiler.apiVersion>2.0</kotlin.compiler.apiVersion>
    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
    <kotlin.compiler.languageVersion>2.0</kotlin.compiler.languageVersion>

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-common</artifactId>
      <version>${openapi.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
      <version>${openapi.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
    </dependency>
    <dependency>
      <groupId>io.projectreactor.kotlin</groupId>
      <artifactId>reactor-kotlin-extensions</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-coroutines-reactor</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-gateway</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mongodb</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ninja-squad</groupId>
      <artifactId>springmockk</artifactId>
      <version>${mockk.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.artifactId}</finalName>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <configuration>
          <args>
            <arg>-Xjsr305=strict</arg>
          </args>
          <compilerPlugins>
            <plugin>spring</plugin>
          </compilerPlugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <executions>
          <!-- Make spotless:check goal execute during verify phase -->
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>

        <configuration>
          <kotlin>
            <!-- Where to look for kotlin files -->
            <includes>
              <include>src/main/kotlin/**/*.kt</include>
              <include>src/test/kotlin/**/*.kt</include>
            </includes>

            <!-- Configure ktlint, use latest version (version tag ommited) and where to find editorconfig file -->
            <ktlint>
              <editorConfigPath>./.editorconfig</editorConfigPath>
            </ktlint>
          </kotlin>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
