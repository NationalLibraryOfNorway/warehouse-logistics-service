# Define what services to set up for local development
services:
    # Set up a local mongo instance for local development
  mongo1:
    image: mongo:4.4.22 # Same as the version in the prod env
    hostname: mongo1
    restart: unless-stopped
    entrypoint: >
      /bin/bash -c '
      openssl rand -base64 756 > /data/keyfile.key &&
      chmod 400 /data/keyfile.key &&
      chown mongodb:mongodb /data/keyfile.key &&
      /usr/local/bin/docker-entrypoint.sh mongod --replSet rs0 --keyFile /data/keyfile.key --bind_ip_all --port 27017'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: wls
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: toor
    volumes:
      - ./mongo/mongo-init.js:/mongo-init.js:ro
      - mongodata1:/data/db
      - mongoconfig:/data/configdb
      - mongoshared:/data

  # Set up a mongo-express instance to view the mongo database
  # Makes GUI available at: http://localhost:8081
  mongo-express:
    image: mongo-express:1.0.2
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - mongo1
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:toor@mongo1:27017/?replicaSet=rs0
      ME_CONFIG_OPTIONS_EDITORTHEME: "gruvbox-dark"
      ME_CONFIG_BASICAUTH: false

  # Set up a local keycloak instance for local development
  # Keycloak is configured to automatically import a test realm with service accounts
  # Makes GUI available at: http://localhost:8082
  #
  # When making changes to the realm, export the realm and save it in the keycloak/import folder
  # docker exec -it wls-local-keycloak-1 /opt/keycloak/bin/kc.sh export --file "/tmp/mlt-local-realm-export.json" --users "same_file" --realm "mlt-local"
  # docker cp wls-local-keycloak-1:/tmp/mlt-local-realm-export.json ./docker/keycloak/import/mlt-local-realm-export.json
  # git add docker/keycloak/import/mlt-local-realm-export.json
  # This connects interactively to the container, uses keycloak export command to export the realm, copies the file to the local machine, and adds it to git
  #
  # Also, since I am a lazy boi: axiell -> E93MF2F8UfpRrCowAbVMStvsTzy0gmgr
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1 # Same as the version in prod env
    restart: always
    hostname: keycloak
    environment:
      KEYCLOAK_ADMIN: root
      KEYCLOAK_ADMIN_PASSWORD: toor
    ports:
      - "8082:8080"
    command: start-dev --import-realm # Automatically import realm on startup with needed clients
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import

  # Set up a local SynQ instance for local development
  # Provides an option to test out communication with SynQ API locally, without the need to use SynQ in dev/prod environments
  # Makes Swagger GUI available at: http://localhost:8181/synq/swagger
  dummy-synq:
    image: harbor.nb.no/mlt/dummy-synq:main # Get the "latest" version of the dummy-synq image
    restart: always
    ports:
      - "8181:8181"

volumes:
  mongodata1:
  mongoconfig:
  mongoshared:
