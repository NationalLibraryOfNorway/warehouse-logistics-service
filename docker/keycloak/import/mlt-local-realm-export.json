{
  "id" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
  "realm" : "mlt-local",
  "displayName" : "Magasin og Logistikk (local development realm)",
  "displayNameHtml" : "magasin-og-logistikk-local",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "ES256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 28800,
  "accessTokenLifespanForImplicitFlow" : 28800,
  "ssoSessionIdleTimeout" : 36000,
  "ssoSessionMaxLifespan" : 43200,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 36000,
  "clientSessionMaxLifespan" : 43200,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 36000,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : true,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : true,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "64568735-f0af-4b8a-b1b8-17c2a05883f7",
      "name" : "kardex",
      "description" : "Adds a \"kardex\" role to the JWT to identify users/clients permitted to access Kardex endpoints",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "a4e99e98-ede2-4cb6-8ec8-344f584443ac",
      "name" : "order",
      "description" : "Adds an \"order\" role to the JWT to identify users/clients permitted to access order endpoints",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "253b61c5-8c7a-4c5f-b254-fea5770ae0d6",
      "name" : "hermes-admin",
      "description" : "Adds a \"hermes-admin\" role to the JWT to identify users/clients permitted to access admin-only endpoints\t",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "8a38cdf1-9cfa-4e08-b804-2d1c2f306844",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "d8878f75-5609-4ad3-8ff7-7a179e7ee6bf",
      "name" : "item",
      "description" : "Adds an \"item\" role to the JWT to identify users/clients permitted to access item endpoints",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "a3623cc0-4da8-425b-b419-1cee49af3451",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "da78bee7-7416-4a4b-b89d-292ac2d2b478",
      "name" : "asta",
      "description" : "Adds an \"asta\" role to the JWT to identify users/clients permitted to access material owned by Asta",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "16cce57d-d95b-4c53-b6a7-ac8d547cfc14",
      "name" : "default-roles-mlt-realm",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "419e5118-d269-464f-9193-248b34a2d873",
      "name" : "synq",
      "description" : "Adds a \"synq\" role to the JWT to identify users/clients permitted to access SynQ endpoints",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    }, {
      "id" : "cf49fdba-4f23-4306-bea7-f3e132e803af",
      "name" : "axiell",
      "description" : "Adds an \"axiell\" role to the JWT to identify users/clients permitted to access material owned by Axiell",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025",
      "attributes" : { }
    } ],
    "client" : {
      "axiell" : [ ],
      "asta" : [ ],
      "realm-management" : [ {
        "id" : "a30a6c80-c585-45fe-af9b-c1009aaa25d4",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "bb2624d0-3292-4389-9a91-ef021f8d8d64",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "23c09aa0-06eb-49b6-9347-376e9db20a71",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "e8154f40-6295-4697-96a0-85d3e04e0ca1",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "99973cf1-c78e-4fc2-9008-b5ec59fe44cc",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "c877312b-c7fa-4aeb-97e8-de7c186376c6",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "e0590178-7b88-4eb6-8017-77ff0e28a1f5",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "83edf93d-2a87-4518-acb7-ef07031de036",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "73eaed48-614f-4194-baa9-a899f7289eb0",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "4c22fa0c-2390-4176-b667-5babb088d307",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-clients", "impersonation", "manage-users", "query-groups", "view-identity-providers", "manage-events", "view-users", "view-authorization", "manage-authorization", "query-realms", "query-clients", "view-events", "view-clients", "manage-identity-providers", "query-users", "manage-realm", "view-realm", "create-client" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "90e9f084-7287-4327-a096-ad3e31f3f9e4",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "5b75765c-194c-4cea-9771-3af633a634f2",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "5db9414e-0cbf-4163-b85d-241e6cece2fa",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "f265f789-7078-4543-85ba-036eaab5f56b",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "7f85444f-84d5-4d27-92d5-f9e0cc54fc11",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "6dc0cd0a-ae2f-4730-a07c-e7984201c924",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "e79727f6-3d51-4294-aca2-2f1a15d6d93a",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "e34a75dd-1d7d-4025-b617-1e183b8a697e",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      }, {
        "id" : "0b437ca2-4530-42f3-a301-9a0a02627521",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4959811-baeb-46f9-a313-14371c9894f1",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin" : [ ],
      "admin-cli" : [ ],
      "kardex" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "8f1aaeb7-54a3-4921-b341-247d9d2ae02d",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2ce493fb-c784-410d-b03d-53d489653ad7",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "d2b4e7b3-9555-489b-9343-a734ff98a844",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "16862c54-915f-451c-bae6-41ea604d20eb",
        "attributes" : { }
      }, {
        "id" : "94be776f-c885-4e8a-8a82-4ce0b5e24ca1",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "16862c54-915f-451c-bae6-41ea604d20eb",
        "attributes" : { }
      }, {
        "id" : "bca65a8d-2cd3-4f0c-88c6-a9e5ffad4bef",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "16862c54-915f-451c-bae6-41ea604d20eb",
        "attributes" : { }
      }, {
        "id" : "cfd7504a-a3b8-4e00-828d-f0a904c2a388",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "16862c54-915f-451c-bae6-41ea604d20eb",
        "attributes" : { }
      }, {
        "id" : "4b2064bc-5664-48b4-b6f3-f3acd3329b3e",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "16862c54-915f-451c-bae6-41ea604d20eb",
        "attributes" : { }
      }, {
        "id" : "d42e58de-a9e3-48ca-91c1-58f2d7817b59",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "16862c54-915f-451c-bae6-41ea604d20eb",
        "attributes" : { }
      }, {
        "id" : "adb95d91-39bb-4363-a490-b43c1be82f25",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "16862c54-915f-451c-bae6-41ea604d20eb",
        "attributes" : { }
      }, {
        "id" : "d1dd6a56-e767-4551-bd2c-f145f34d0fde",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "16862c54-915f-451c-bae6-41ea604d20eb",
        "attributes" : { }
      } ],
      "dashboard" : [ ],
      "synq" : [ ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "16cce57d-d95b-4c53-b6a7-ac8d547cfc14",
    "name" : "default-roles-mlt-realm",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "c87b4b7b-5d42-4304-aec1-68b6817a7025"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "6701c3ab-dd58-464d-9f4c-269c63be512c",
    "username" : "dash",
    "firstName" : "Dash",
    "lastName" : "Dashen",
    "email" : "test@test.no",
    "emailVerified" : true,
    "createdTimestamp" : 1749553415115,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "a35917f2-ccc4-4527-b510-f89887eec674",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1749553426915,
      "secretData" : "{\"value\":\"M14qkA8SLWnv+t3rko97xNt7Qh/6ly6/lPtqSIlOFdkvotz6Gmsx1mFjzQFuEpwNoz57+8xeSjQUoVdY1ISiWw==\",\"salt\":\"wrrJBJIIvFTNCh/gQDiOSg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "kardex", "order", "hermes-admin", "item", "asta", "default-roles-mlt-realm", "synq", "axiell" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "4d092f99-3b17-4540-bdb6-8c09abcc34ba",
    "username" : "service-account-admin",
    "emailVerified" : false,
    "createdTimestamp" : 1747829329456,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "admin",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "hermes-admin" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "7d249c92-9621-4234-971a-c62e13c2cf17",
    "username" : "service-account-asta",
    "emailVerified" : false,
    "createdTimestamp" : 1736247270688,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "asta",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "order", "item", "asta" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "a4cca17a-2b24-45fe-b4d5-bb03dc4ebbb2",
    "username" : "service-account-axiell",
    "emailVerified" : false,
    "createdTimestamp" : 1720685173214,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "axiell",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "order", "item", "axiell" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "6ffca037-a92f-4f5e-a2a2-b94f1fbadbf6",
    "username" : "service-account-kardex",
    "emailVerified" : false,
    "createdTimestamp" : 1744373610356,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "kardex",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "kardex" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "1d8f33f8-7381-4a14-9c0f-dd4d9990c12c",
    "username" : "service-account-synq",
    "emailVerified" : false,
    "createdTimestamp" : 1728308503296,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "synq",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "synq" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "16862c54-915f-451c-bae6-41ea604d20eb",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/mlt-local/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/mlt-local/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ea6a82bd-e56c-4fd0-b029-c9d562a6be5d",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/mlt-local/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/mlt-local/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "60321c5e-5489-483c-95aa-45f1a4532800",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "eb724003-ff3b-4dbc-b018-024923a7224a",
    "clientId" : "admin",
    "name" : "Admin (Local Client)",
    "description" : "A local development version of the admin client used to access admin-only endpoints in Hermes WLS",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "admin",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1747829329",
      "backchannel.logout.session.required" : "false",
      "post.logout.redirect.uris" : "*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "6de8ba41-1398-4adc-bebc-b61db2661e75",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e12d3a53-b8bc-4046-9c3c-8c5a54b6b4a5",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2a748809-cced-4d17-a3a0-1858724336d9",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "roles", "wls-audience", "wls-subject" ],
    "optionalClientScopes" : [ ]
  }, {
    "id" : "ec9ed42f-93c1-4011-9d83-f67dc0753d83",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ce36887b-4097-445b-9ec0-6aac85a3038b",
    "clientId" : "asta",
    "name" : "Asta (Local Client)",
    "description" : "A local development version of the client for Asta to use in communication with Hermes WLS",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "asta",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1745326089",
      "backchannel.logout.session.required" : "false",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "db26ab2f-810c-4754-97fc-d31aaa9fb8de",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "73b05a1e-5783-4bab-b57b-0b10593baa1f",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "72c3d4be-f570-4393-bb87-41ce60809e30",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "roles", "wls-audience", "wls-subject" ],
    "optionalClientScopes" : [ ]
  }, {
    "id" : "902b430d-e2c9-4888-b94e-a410bceb26bc",
    "clientId" : "axiell",
    "name" : "Axiell (Local Client)",
    "description" : "A local development version of the client for Axiell to use in communication with Hermes WLS",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "axiell",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1720685173",
      "backchannel.logout.session.required" : "false",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "af85e6ab-4de4-4ee4-a6fd-bce9a2ba6e79",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "40610c32-2b58-4984-81d8-7844d35f5a92",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e0940af4-72ca-4532-8e21-f486f52fad1f",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "roles", "wls-audience", "wls-subject" ],
    "optionalClientScopes" : [ "web-origins", "acr", "address", "phone", "profile", "offline_access", "microprofile-jwt", "email" ]
  }, {
    "id" : "2ce493fb-c784-410d-b03d-53d489653ad7",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "2a8e55c9-ee3c-421b-8685-5616a434f092",
    "clientId" : "dashboard",
    "name" : "Dashboard (Local Client)",
    "description" : "Client for the Dashboard app. Use with the username dash",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "OR22O4qGXFicYLGnkKeRpYZPXdeEjDcx",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1748850714",
      "request.object.signature.alg" : "any",
      "post.logout.redirect.uris" : "*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "client.use.lightweight.access.token.enabled" : "false",
      "id.token.signed.response.alg" : "RS256",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "require.pushed.authorization.requests" : "false",
      "acr.loa.map" : "{}",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "roles", "profile", "wls-audience", "wls-subject", "email" ],
    "optionalClientScopes" : [ ]
  }, {
    "id" : "611d6db7-461f-43c3-834b-9d24fc900795",
    "clientId" : "kardex",
    "name" : "Kardex (Local Client)",
    "description" : "A local development version of the client for Kardex to use in communication with Hermes WLS",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "kardex",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1744373610",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "4ceb8e8b-99d3-443e-a7bd-80fb03ebbde3",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cb70b764-a1e2-4fd7-aefb-a51fd30555de",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "63f7e25c-3490-4e7a-b109-4e333c30a9fe",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "roles", "wls-audience", "wls-subject" ],
    "optionalClientScopes" : [ ]
  }, {
    "id" : "d4959811-baeb-46f9-a313-14371c9894f1",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "73b0fbb3-3cca-47cc-9311-6194cec74b7d",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/mlt-local/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/mlt-local/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "f4608611-ab38-4fd1-bda1-a65db8f0970c",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "39dcf450-108d-45aa-aec3-c2bfeb34ddb8",
    "clientId" : "synq",
    "name" : "SynQ (Local Client)",
    "description" : "A local development version of the client for SynQ to use in communication with Hermes WLS",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "synq",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1728308503",
      "backchannel.logout.session.required" : "false",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "fb4cfbb5-7db3-4e74-8cd0-98bb0f01039f",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bfb948ce-99e4-420e-b5c2-b5a42583534b",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "83bf59af-0735-4282-98e3-f790a3f0f1d1",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "roles", "wls-audience", "wls-subject" ],
    "optionalClientScopes" : [ ]
  } ],
  "clientScopes" : [ {
    "id" : "f72419b3-e002-4619-99a3-46501fd7977a",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "2f73de32-946d-4cef-81bc-0df94fd9e3cf",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8ca01843-9e40-4fff-9987-947275e40dea",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "lightweight.claim" : "false",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "15073efa-25ad-4c3e-8410-3a3b9d8d872b",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "usermodel.realmRoleMapping.rolePrefix" : "ROLE_",
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "false",
        "lightweight.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1e1055a8-ee54-4e58-8c4e-d95f022539d0",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "333fbd53-e00b-48f7-a2ca-50d50509b8b0",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "d4bbf2e6-91eb-4db8-a5a9-00af0dac4a10",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "d99b8662-6354-4919-b978-307ea7b6fcf7",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "c86839a5-6c69-4cec-8000-0660a6f29cae",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "913c5b6e-bfe9-4a42-b523-10b4fd251195",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d44d8453-2ff4-4c65-bf9e-1c69ac36f986",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d04ce991-6bb0-4ad6-874e-858548bcd743",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c5047747-aeb3-46bb-a622-a61cf6a07140",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7bb325ff-b769-48be-be32-c359197ed437",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "886fa4b2-712a-4463-afff-60a738829ae1",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "645244e3-e9c0-4f0e-8071-5a7875a67231",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "78ac4269-4dca-4d8f-9e8e-3bd4d8242752",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "49a4b085-bea4-4a33-9b52-24916a167656",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "58629c21-e1c7-4fb4-9325-02ec72f06b45",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "512aac96-d429-409a-ab77-e3390da9b53a",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "259c116a-095c-4163-b4ad-549c22fa9c4b",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8700f716-7597-4806-8a09-779c6386d052",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a7435789-a473-4902-91c6-5071c29f523e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "ebcb7370-bd5a-486c-97a8-5147b17a9494",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "4e158d47-d181-41ee-b23a-8cc87a686537",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "708c1537-5c39-40b6-b831-8b5a17357086",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "07f9a69d-cf61-41b6-8dce-0f7a2a67f045",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "fbdf8b9e-c5bf-4c98-a843-8a828ec19221",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "e817c5f7-f0e9-4738-b9d6-09f6918a9a5f",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "3e208bfc-3d22-45d1-8636-e5cf546eefb0",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "fa821941-3117-4df5-885d-be22fddafd29",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "75535813-0f25-4e72-8b2f-47b12fbc5188",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "be45c03a-b09c-47c8-ad65-bd7a4c48bf0d",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "52ecb084-2b29-49f5-88f4-6616ce51a233",
    "name" : "wls-audience",
    "description" : "Adds WLS to the audience (aud) array in JWT, in order to identify WLS as intended recipient of the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "c4f832f1-6756-4634-a698-a59efe51d6f4",
      "name" : "WLS Client Audience Mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "included.custom.audience" : "http://localhost:8080",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "lightweight.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "d6fc6cbb-f842-4765-a66f-54344b7a43da",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "3cf82aee-1510-4819-b7f4-a61f8a304b03",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0f13340f-2039-4a3a-a2c7-db28661a3a33",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "927a7df6-f078-4836-b850-51694f2692f2",
    "name" : "wls-subject",
    "description" : "Adds client ID to the subject (sub) field in JWT, in order to identify the client as subject of the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "dba439ed-e50c-472f-a865-860c22a85cfe",
      "name" : "Client ID to SUB",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "lightweight.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "sub",
        "jsonType.label" : "String",
        "access.tokenResponse.claim" : "true"
      }
    } ]
  }, {
    "id" : "086313ff-2f82-4206-92f5-49b5fe7c3e34",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  } ],
  "defaultDefaultClientScopes" : [ "roles", "wls-audience", "wls-subject" ],
  "defaultOptionalClientScopes" : [ ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "ccebac3c-80e7-4b47-b435-c3d60b21a115",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "169712d9-64c4-4097-b35c-aff995a09909",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "57033422-321a-450f-a5a0-cd62faf09431",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "4a0c26c8-7675-4458-8d05-7cf6d946854e",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "2c663941-8961-443f-a7c5-6357b4856c2e",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "4757ece0-7a83-4a22-a5e3-889f218defeb",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "0db09405-5c29-4d31-810a-198d33952337",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper" ]
      }
    }, {
      "id" : "85a712b7-0975-406f-ba2e-c9a99625cfad",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-user-property-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "c93489fd-456a-4834-b24d-dfe0705334b4",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "a22e82e4-2aa9-410b-90aa-3007648b78be" ],
        "secret" : [ "ORt_AXvqdmbhNoZXG9GysA" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "34a8ad1d-30be-4a24-9cdd-1387c2d33f76",
      "name" : "fallback-ES256",
      "providerId" : "ecdsa-generated",
      "subComponents" : { },
      "config" : {
        "ecdsaPublicKey" : [ "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEVgY5g9PRafpI3PVe5x46puhHzZeG0xXReh1uZo3zZrT9t69ez6AD1oIVztNtp0UpvLTsYAHqgRzLmZUuNTuDSA==" ],
        "ecdsaEllipticCurveKey" : [ "P-256" ],
        "ecdsaPrivateKey" : [ "MEECAQAwEwYHKoZIzj0CAQYIKoZIzj0DAQcEJzAlAgEBBCD+9gwBZBxuTBhJLObF/ivakXEVMYO6n2v9xBhi1rJ6Ng==" ],
        "priority" : [ "-100" ]
      }
    }, {
      "id" : "1e470434-d55a-4686-b6cb-0352f63e5c90",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "cd7cdbf6-9f29-4821-8a67-833bfcbc2949" ],
        "secret" : [ "e-OXMf4UFDh--yrEAxXtAkXbl3LaMjco5jG_nbN40bVoLgMlooH_pIPAGMZ7hxOSw18-6pa3QrCUtlH--Mve-icic1i9c3MoPAzVUbcZE1WcArCkwCmigxabwsciAaF7INr6Es9IL5HE_6fbEyMPDeUI6xgrjZniKNmcXFuFQ4A" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "7a0b7241-ff11-4881-8175-5354f1194be9",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEA3af5QOjtqOmxz9fHrut7sTzlAN/wKXqvQ7V+tfzQ0YTUx0OvZwpl8EhEXToRv2UOnoELCOD/h5HaVaZU5wx1Fk6HdYonMfwHVotfsAlnM/oGvEi5xe1+uluCyFLaRy86vFmSwqDXQ52Sqr9GOpxwCh73L97UBSdD+PZI9Exgy0x5u0CSArrTvFMfZSqXgTI2q7axO58ePabe3sDNJKcEe7ea5bxFembZ0T+5QMIUApGhS35SaKkoZmkGrVP5QeFmTgkhkFQUwHsMJHV3lk7RWR2ZwpMeoEcWVCSljpZkJSz1EdykIR/1JI+SGkjaw2veR169WVZMR/5daZ/krVc4ywIDAQABAoIBAGJtasOmK5LsY2c2HJfSPdUQg2iGCLGCpz1b5O6PW3MOlyX9KnCJL4cpsCHt3V+uUnWUPAAvWYkr/VY3TFBlOcE0Efbh6FHL5r5Jma4kHs334vHNIaGAutuqM0Mdd4xQrrZg2EjQ/4Yo/K4Rze/M8/uqkH2TZ3b6Xra5NuA04m6jrTX9Mktr93CrOAcfODulMQakkk/gN3WL3ySB528Bpsv3gDwiEYCJLxASe6rDOFMKHjNOinoV+CiaHSHQV82KVi5grCCAUL73iIf7gUtBEWCFFb2sqADJfwRofJ96bZQ7J9T4238OC+WA57e8sFHgODbX+QKnu7tModZdkXRLR8ECgYEA+0vBSmPruvo6GrpIElA8fVM+wybJuZVzm+D6VNhvYYSKFVQvHLIAVaKNAItGyMaNCD9H8Vj6rwZ0immDXAUEBPgNWuBfnZkAzpvcOb3rZpWcuityU/6zWJMPetK9aoAyOzmZ2X+98hypskgdj6vvCNl50XB7aI/SwlaUr6Ugy9ECgYEA4c4uQpnPZ+Mh04tGvMLHM5FQ4dCephIrp8MprdN7jGWONnRqC9qoAInRWo5mLCCRi118pg5/tYDwpwRpzWjCQPm7/vm8wQ1m22KGweTS2O+/GTykbWjBU8FnWo164H9yShdPJ84k62gyUvIh7uXeq1G1R7k0syuhxRiSw9sLTdsCgYEAgjGTaRkvrmWp6OMOJ/7N+BhC8hSMeswFY4NB7udbfWiPqdE9v14xciyPZPLDr42+z8EJYu84oal0g6l61xf6JyDkump430u/8Usq4/eTmEh3NLUBvKa/AGrgoD/CxwS4AZssLFVUcbWL7cQTHLZ1V15lEK94IIozJWB6FC43OaECgYA+Y/WsOUtxbPSfus/kv/zCZthuTHJJeKPPSsFtYg21ESpmKWxTsirRW0MZPldEwgr08vPJ/h+TSvkzbKi/NL7XrSkgnmhk/wr4exS45jzL7BJlKrhT8qnYNowUHRtihFRT3HTmjrLsyHF/MZ/mnmUT+ROZqbbB+sBL8So8K33IGQKBgG1yPy9LFmr1Bc/ZuQdvxbn3BeDdiuyQukeRCamK2JUy5oLSzrSu7RqpHVaETjeUXW/6fBK4MRbK/kbZN2Y0o99jLo6MM1f4DfFW975wg26roDOHk9nzmjVhq0skqRorHID0qscuZB1L0/O083hTeQ1r68yZ1EerxDCUr0Dyzkg9" ],
        "certificate" : [ "MIICoTCCAYkCBgGXWXwAKjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAltbHQtbG9jYWwwHhcNMjUwNjEwMTA1NDQ4WhcNMzUwNjEwMTA1NjI4WjAUMRIwEAYDVQQDDAltbHQtbG9jYWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDdp/lA6O2o6bHP18eu63uxPOUA3/Apeq9DtX61/NDRhNTHQ69nCmXwSERdOhG/ZQ6egQsI4P+HkdpVplTnDHUWTod1iicx/AdWi1+wCWcz+ga8SLnF7X66W4LIUtpHLzq8WZLCoNdDnZKqv0Y6nHAKHvcv3tQFJ0P49kj0TGDLTHm7QJICutO8Ux9lKpeBMjartrE7nx49pt7ewM0kpwR7t5rlvEV6ZtnRP7lAwhQCkaFLflJoqShmaQatU/lB4WZOCSGQVBTAewwkdXeWTtFZHZnCkx6gRxZUJKWOlmQlLPUR3KQhH/Ukj5IaSNrDa95HXr1ZVkxH/l1pn+StVzjLAgMBAAEwDQYJKoZIhvcNAQELBQADggEBALJk/9vdEuXVLmh8rkY2bouhwDJFd66TSzsZXO0Vv43YoAsemFUhRbVZh6/BgayeC4A+0jP2Lm76uPX2XF+e08RVwCR2/oa9R6E7R3Xq9YO/ivRLokJ3GILyebGo36PwbkbDVaFIYD1DvzFQgwn3vIhcHHtl8UyH62Frh+WD35Ju0m/tNCHSlrnqtDbf+dvRoxgaVYwBIrQgxUYTnUA29r6mGE04m4URf59lJNHUyomkIyrUNnGw0WFiLKAJ2mTVXKTty4R8pBsFphwW6AFkunJz3TDNcOszjb5xCrFjybZr3cNIprbnUCaq2XNmL1UV+hWqMN16VOY9pni973+HUpk=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "06a522f2-b49d-488a-9b1a-e1f070f72446",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAxLhiB1mdlZcxYO/x71wr9fKQtFd8BgJGqLdPbII+bOtSNbnSFZ2JZePtOBzhciReEaY1WE4MFqGr+7cf1lxh6lEYB6c4OANX7VVyfkFxBzdX/TZ2yZPJLu0p1Qr2UjcJDxjOFt1fItftA3wEIWv3KI+6JzgtwaSlSrs87K8SOrDK6zcLRVTuvd9KPTcT7EdWyCxB256j97k4WxreOBks3W2by17pSaC1Nko5/+eEiUPYc6qreP+estFhfUP6kmpBoqlx4YlwRbBYQQP8M6iTOaTG/j/eqPWqTbQaXUPI9lfsQi5WUfmYIBpbeaExjx17JCXbIwAxbBggdxYCE6HtpwIDAQABAoIBAEgoNdTqWzIuti8PdFfPIFTjt45e9KAjn5VtP9XWZF2BZ7NLSLMjCO31z+KgPVWn31Vr+O8+GZMHlFUNU8FGO6g+PKk5/hYVq9/jUs7a5EG4XC8GFkZUThxHY+vATJ/Vjh4ahCXA54+ZUlfP2pgDyTH4nliac7Yu1W53BZ7vjKk34IZdk9JUgtML9hyjeX+nLQuzewftr22i9mNIQmFspr+FVTAaJE7zy7dvUdE9D9RnbHq17AOnzaJMlrUgY/IsYI5zzDl2LEMsc5V63NSbz4d8lWhBesbSb3OZC0nrc0ZJ6euSCQCzpSO3r/6QRHaIdVpUSKcDSkkrU1nLTHlMgJECgYEA+LR9BPqXLRxOylFz0pww3WsZtmRAQW15oJiUWh6IWuzV8gfhj99dZzgmOMTeqQHxzRK5LgPPAgJ8AIssM0hMRNp7uXbTiAfyhcZZkX3qfwx5bBg2GgwUxUXRmkkas5UfLf5iHWA3x7H7c4QGu1yGFzvifg5dfijbvREJuceAR0kCgYEAyn2LN/ji/tvnaE4Pi7KAg1JwU2+F7BVxKlMNO+lFQBhQTgv0fW4jXumAdbqKarx6ueuX/up5JwXd50ed6sRmewK5mmox9uxG5IfS0+5moqwhPUNcFlUyBMFAv5TOu3WXhTNNZ1tpxFbajQhPvtmFXLMuEKhae9amA4VqASyx3W8CgYEAz3VfRCP0r0CJyOKhBvIbINgSHr8JiopThs9AENyfSZl97eL9GRJty4he+cPfKIPiu/n+Vo/+weJopdtyB2UrmdPWmSKx2Ssn9sc6N88dKNWzA6Q+nQOu39AZw+VvTJX76FXmajK01PN2mSlspCXOBNuDVzuMaYyTn+bygfIU42ECgYBgauMtpb9Ap6lKi1DvrfFvloOR1xqnzZXzF1TH4E1vNaSXZS3nw9fny7u1Uzuxk0nE2Z+obDGAGVUOWZWiQh6iGCwUkNh1wRAIpXwIGg6ZCulQ6JAiujJ0/Sg9kTfXHykk7ca/nlGAgfLTENAYCi9sco1OtTtQmGa4aoCNSqDu1QKBgQD2BWBnxORfALIzhSJBB7A740m3fd7H9AZ/N83TAlJUSXk3QZfMsdn4GbJL03HfiU7mgkaW9+Dxuu6clapIwZAQvWF0w4IZtbucNjTL49ys3CXIjjZDIAA2gY2P+g+j89tbn9NXS92bCNzMGGpXZxSo/wyh/7HzFU6ls3/GjrCn+g==" ],
        "certificate" : [ "MIICoTCCAYkCBgGXWXwAiDANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAltbHQtbG9jYWwwHhcNMjUwNjEwMTA1NDQ4WhcNMzUwNjEwMTA1NjI4WjAUMRIwEAYDVQQDDAltbHQtbG9jYWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDEuGIHWZ2VlzFg7/HvXCv18pC0V3wGAkaot09sgj5s61I1udIVnYll4+04HOFyJF4RpjVYTgwWoav7tx/WXGHqURgHpzg4A1ftVXJ+QXEHN1f9NnbJk8ku7SnVCvZSNwkPGM4W3V8i1+0DfAQha/coj7onOC3BpKVKuzzsrxI6sMrrNwtFVO6930o9NxPsR1bILEHbnqP3uThbGt44GSzdbZvLXulJoLU2Sjn/54SJQ9hzqqt4/56y0WF9Q/qSakGiqXHhiXBFsFhBA/wzqJM5pMb+P96o9apNtBpdQ8j2V+xCLlZR+ZggGlt5oTGPHXskJdsjADFsGCB3FgIToe2nAgMBAAEwDQYJKoZIhvcNAQELBQADggEBACEdO71vevWMS0IvPLlJmP58bJs0WWGxgt/yDvQxoidxxMSm06+N+IgyHGSnuXxs6t83rgh1WugE2t+U/tN/pN2TPJ+moDCVgfc+ULOI/XYxE8sTvHJ2kU2PnU8fRDteLyeGYAGyRsm0PZeSGLy/4sPGFDX+o9P1uUoeDL5KBDMci/z84OUf6BE7IQlRrBG3XjSPDmerULGTFGtHxpQZMGB98UL7kZ5/MJrRGLhaEArBqYlHfbXwWIUvoFqetF5BpNf252bKCcp6tXjYeqPV8hNW7ck42q3xr6BvK7ifDcSzW1QYYgJK+e7aH+1uFZD3Vn3SfRQbgK1vzpYJST1BiJw=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "f8120ae2-3e6e-48c9-8fdc-cf309574a4f4",
      "name" : "fallback-RS512",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAu7x4Kx6++2IBSaafK2oalBHTii4Ar1qh4elVXCKeQqH4zmk6r0aokVsloJsKO9srRRsHakfDcxCa572h7DezwT4Fb6kjKt7zFXHhKTGLEo3MvGVVzkfIzyeJKcwxUFN5V+bYKeCsZr2F43wbFKKzilTGTykvA3mZWDjMJ+1AOMp0JxuSfMVR7s+572Sn29fsLW1RI8qrAF+N0uGlGoiy9/MMM9WE3zJkEp0Z/kKi1ShV85d54LkP+5G4EGsC5/twNMcuUFJsMbhohv4wcnzVetcQmtyzMrfc8vjpONpn9d206dXLG9Wg0hwCLQzbhMbHVHPYuIqBkA7dUZvJ2dfRkwIDAQABAoIBAAHbZGAM0RG04bsX5G8GkzSuXbK3F3FbdWkXTUXgZU9czZqlqA9myVu9Y7ZMS3LJaM3mZ3koojuPQxWSXZsSWO8OJX/bhJBGHcV8Xbi7PAkBo4ukSUCXv7VyAXSvslyDNnxGp0Lf7V6LdsKaONV/EFE/hcH748G1iv+ZzuSA+YrFfSL25kDT/M1/FeijvSTnUjtS9qadUZ8yVx4VByVZvG62/sgDtf90obENVRWMbiJYmhaN5z4geJnUKhfaI13eVOTDp2oSM2MJOr8XOHckRO7LgziX1iz8FoWWSCcT8hp3/meCEESxhYNw1sjv/ke1xe4ohaKQ3mtOzjGZvJd34LkCgYEA+/excGHS4/U3Q19QXcAsVDp59+GHo4tPodX+MVTJSqWI6Xgh28QxU8ZgyS2bym/uqScoipyColWhNY+Y4wjbvJsOIfimII5AZybw5J5U6JRm9IgqGLE1WHrMcKWgB4+PWF9rtTNx67NlJ7zoxhBe7/HFCdkHlDmPOt0GE3vGphsCgYEAvr2fHVVAG5tLsS7DIONTZtbTdyy+A3u76y6BDORckfmsvnijJ4fXs13pgG3RLZg0wVs9qVQj+bXsGke2jgcgysvIClXjXQFfNmHETUGB8WzxRiBAgv7CSDvxrU2LngAjdhiEQZfplQ3Dd4Jid7blu0L8ven79gpkJpGIvuiWGekCgYEA4p6kuK9DPkQOsEnJvohZVmhByvDNTgq+VJBjT3sykDDSMyoZSc/rja2e31JmDG0f+oN9sy2RUPAzTjkZCRmuiLPswiEhSaanxh8ACp9dPtI6xzSwqAS6Nho8RhSxGhvEkXdBKHhcveFb2aHOulV/DdAlp/XLG0WpzQd9r4hj4oECgYAnzNNlwIMm/4mUyCgpNaYSgGMRrAFeIrR8h3CgKwpx30I/YFbTCdJleAQgK0oJlIf1jL9aFNeI5IAGn84k5rHd/xWXqoJNxtqCM3ZNlIyzvsK9mj871kLd5bwxKEwoxOihXM5EDZnM41lVF5zKVBytrXWlfyx3E4YAUj/RbiDb+QKBgQCT8Ug1OJbNqeDK6GmTipD841xh8HzEGk0GksHcYtitKPSRm3Y5cA71Z3qsQgpQeoO6+glYgigUsRxkw9cIa/ZtLe0WbiClab4ovWL87DLoCESXYrG+3UBr5nOwVZx+tbRTMR+2lWsmXON0rOseAeZdFOTHcQ1RUAgHPNjyG1T6RQ==" ],
        "certificate" : [ "MIICoTCCAYkCBgGXWXwBMDANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAltbHQtbG9jYWwwHhcNMjUwNjEwMTA1NDQ4WhcNMzUwNjEwMTA1NjI4WjAUMRIwEAYDVQQDDAltbHQtbG9jYWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC7vHgrHr77YgFJpp8rahqUEdOKLgCvWqHh6VVcIp5CofjOaTqvRqiRWyWgmwo72ytFGwdqR8NzEJrnvaHsN7PBPgVvqSMq3vMVceEpMYsSjcy8ZVXOR8jPJ4kpzDFQU3lX5tgp4KxmvYXjfBsUorOKVMZPKS8DeZlYOMwn7UA4ynQnG5J8xVHuz7nvZKfb1+wtbVEjyqsAX43S4aUaiLL38wwz1YTfMmQSnRn+QqLVKFXzl3nguQ/7kbgQawLn+3A0xy5QUmwxuGiG/jByfNV61xCa3LMyt9zy+Ok42mf13bTp1csb1aDSHAItDNuExsdUc9i4ioGQDt1Rm8nZ19GTAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJIhBA9EnUI8vqn6vohN+AbgCzwK/XU6qs9z1Y2/7hKLPts/Rz+EFjmfpmXMqhLN2AsRL8RvGRVd/RnBfm+EprThChkA9h/Zft1eynLdf/WbCUmrud82bk0EK2vm71PPJuT+RbSdCmUvGVzdbLJuh/B74hBo5gpTiUE0dhqZZgOmFWzPKAFbYoWMeWN6jYyEVsQDLKmdzZTS5u0YpxkHR8trRdZfyiQ/EwIzd06iwva3IokdnS3v4BNz1GdHo1pQ4ulOzAy3NnaRgSzRlvRdVOLhVTQ+mAoGtDQifKrZbWb9wk5AyJPexcVJ+s0dJRh8/y9gdTizTFbUGx/jbsYgE6U=" ],
        "priority" : [ "-100" ],
        "algorithm" : [ "RS512" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "91dc0cb7-a175-494e-ae4a-b0f0c6c60bb6",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8d955486-b637-434b-b90e-1758dad5a3ec",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e19f94b7-77e9-4f97-a0fe-bfeef069098a",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0e31a39e-f453-48c2-82a6-07aa41092148",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c0844ad2-63a6-4dae-8a7a-63f364207e8b",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2b561ef5-6058-4390-96f3-fcf3a228ea50",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b0a956c4-3a7f-4539-b11c-b5bb8cd44d80",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7634328d-a1c2-45dd-aa52-87db983c9a61",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "494e27c1-d87e-4b27-95ee-5b57525f1d6a",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "31de01f6-9326-4a7c-be18-7c409050c014",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b0f91393-481b-43ce-925d-8850234881a9",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "84b71d08-a951-4fc1-852a-9d657bc64eac",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fa89da8b-853d-47a3-9ef3-95ce4264d108",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "17953ba9-bc42-4435-a465-efe9eff4c2c4",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "480145b4-4b6b-49ff-8eff-a0154362932f",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bd6d8f73-d4f5-498b-aea3-9e32670e3750",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "998c3105-bf74-402e-836c-ba31503603b0",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "db306456-7f7f-41e5-80cd-8f0f5dbff5e9",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "ff3a5870-7c33-4beb-abbf-f3b04cc439a0",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "8d74cffa-b55a-43df-a161-0e73b8f757c7",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "36000",
    "actionTokenGeneratedByUserLifespan.verify-email" : "",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email" : "",
    "clientOfflineSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.execute-actions" : "",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "43200",
    "frontendUrl" : "",
    "acr.loa.map" : "{}",
    "shortVerificationUri" : "",
    "actionTokenGeneratedByUserLifespan.reset-credentials" : ""
  },
  "keycloakVersion" : "24.0.1",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}
